- include_vars: # TODO can't I remove this?
    file: encrypted_vars.yaml
# TODO maybe handle installation with pakcer?
- name: Add postgres repo key
  become: true
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present # Ignore present argument
- name: Add postgres repo
  become: true
  apt_repository:
    repo: deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main
    state: present # Ignore present argument
  register: postgres_repo
- name : Install postgres client
  become: true
  package:
    name: postgresql-client-13
    state: latest # Ignore present argument
    update_cache: "{{ 'yes' if postgres_repo.changed else 'no' }}"

- name: Create Postgres network
  community.docker.docker_network:
    name: postgres
    state: "{{ 'present' if present else 'absent' }}"
- name: Create Postgres volume
  community.docker.docker_volume:
    name: postgres
    state: "{{ 'present' if present else 'absent' }}"
- name: Create Postgres container
  register: postgres_container_result
  community.docker.docker_container:
    name: postgres
    image: postgres:13
    state: "{{ 'started' if present else 'absent' }}"
    container_default_behavior: compatibility
    comparisons:
      "*": strict
    env:
      POSTGRES_PASSWORD: "{{ postgres.passwords.root }}"
    mounts:
    - source: postgres
      target: /var/lib/postgresql/data
    network_mode: postgres
    networks:
    - name: postgres
    purge_networks: yes
    restart_policy: unless-stopped
# TODO try to fetch postgres IP when the container task doesn't run
# - name: Fetch postgres container info
#   when: postgres_container_result is skipped
#   tags: always
#   register: postgres_container_result
#   community.docker.docker_container_info:
#     name: postgres
- name: Save postgres IP
  set_fact:
    postgres: "{{ postgres|combine(new_postgres, recursive=True) }}"
  vars:
    new_postgres:
      host: "{{ postgres_container_result.container.NetworkSettings.Networks.postgres.IPAddress }}"
