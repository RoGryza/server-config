- name: Install restic
  become: true
  package:
    name: restic
    state: latest
- name: Create restic group
  become: true
  group:
    name: restic
    state: present
- name: Create restic user
  become: true
  user:
    name: restic
    create_home: no
    group: restic
    groups: []
    state: present
- name: Allow restic to read /var/lib/docker
  become: true
  ansible.posix.acl:
    path: /var/lib/docker
    entity: restic
    etype: user
    permissions: rX
    state: present
- name: Create /etc/restic
  become: true
  file:
    path: /etc/restic
    state: directory
    owner: restic
    group: restic
- name: Ensure /etc/restic/backup_files exists
  become: true
  file:
    path: /etc/restic/backup_files
    state: touch
    access_time: preserve
    modification_time: preserve
    owner: restic
    group: restic
# TODO use systemd credentials instead - not supported in systemd v245
- name: Write /etc/restic/repository-password
  no_log: true
  become: true
  copy:
    dest: /etc/restic/repository-password
    content: "{{ restic.repository_password | quote }}"
    mode: '0600'
    owner: restic
    group: restic
# TODO use systemd credentials instead - not supported in systemd v245
- name: Write /etc/restic/repository-secrets
  no_log: true
  become: true
  copy:
    dest: /etc/restic/repository-secrets
    content: |
      export AWS_ACCESS_KEY_ID={{ server_backup_bucket.access_key_id | quote }}
      export AWS_SECRET_ACCESS_KEY={{ server_backup_bucket.access_key_secret | quote }}
    mode: '0600'
    owner: restic
    group: restic
- name: Create backup service file
  become: true
  copy:
    dest: /etc/systemd/system/backup.service
    src: files/backup.service
    mode: '0644'
  notify: Reload systemd daemons
- name: Create backup service directory
  become: true
  file:
    path: /etc/systemd/system/backup.service.d
    state: directory
    mode: '0755'
  notify: Reload systemd daemons
- name: Create backup service hardening overrides
  become: true
  copy:
    dest: /etc/systemd/system/backup.service.d/hardening.conf
    src: files/backup_hardening.conf
    mode: '0644'
  notify: Reload systemd daemons
- name: Create backup service environment file
  become: true
  copy:
    dest: /etc/default/backup
    mode: '0644'
    content: |
      RESTIC_REPOSITORY=s3:https://s3.wasabisys.com/server_backup

      PGUSER=postgres
      PGHOST={{ postgres_host }}
  notify: Reload systemd daemons

# TODO use systemd credentials instead - not supported in systemd v245
- name: Create restic pgpass
  no_log: true
  become: true
  copy:
    dest: /etc/restic/pgpass
    content: "{{ postgres_host }}:*:*:postgres:{{ postgres.passwords.root }}"
    mode: '0600'
    owner: restic
    group: restic

- name: Create backup timer
  become: true
  copy:
    dest: /etc/systemd/system/backup.timer
    mode: '0644'
    content: |
      [Unit]
      Description=Run backup daily

      [Timer]
      OnCalendar=*-*-* 02:00:00
      Persistent=true

      [Install]
      WantedBy=timers.target
  notify: Reload systemd daemons
- name: Flush handlers before enabling backup timer
  meta: flush_handlers
- name: Enable backup.timer
  become: true
  systemd:
    name: backup.timer
    enabled: true
    state: started
